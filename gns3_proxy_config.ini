[proxy]
# hostname/ip address and port the proxy listens on
hostname=0.0.0.0
port=14080

# credentials and TCP port used to access gns3 server backends
backend_user=admin
backend_password=password
backend_port=3080

# default backend that should be used if no explicit mapping for the user is configured in [mapping] section
default_server=gns3-1

# backlog to use for incoming requests
backlog=1000

# receive buffer for outgoing server and incoming client connections
server-recvbuf-size=65536
client-recvbuf-size=65536
# Recommended for production environment:
#server-recvbuf-size=1048576
#client-recvbuf-size=1048576

# open file/socket limit
open-file-limit=1024

# inactivity time after which console connection is closed
inactivity-timeout=300

# Settings for downstream proxy to provide authentication
#auth-whitelist=192.168.75.254,192.168.76.0/24
#auth-header=X-Auth-Username
#real-ip-header=X-Forwarded-For
#allow-any-user=no



[servers]
# GNS3 server backends available behind the proxy
#
# Format: servername=ip address

gns3-1=192.168.76.205
gns3-2=192.168.76.206



[users]
# Users allowed to access the proxy and their password (frontend credentials)
#
# Format: username=password

user1=pass1
user2=pass2



[mapping]
# Mapping of [users] to individual [servers]
#
# Format: "<username regexp>":"<server name>"
#
# the first rule that matches will select the backend, if no matches are found, default_server from
# [proxy] section can be used

#mapping1="user2":"gns3-2"
mapping2="user(.*)":"gns3-1"



[project-filter]
# Filter project library based on project name for [users]
#
# Format: "<username regexp>":"<project name filter>"
#
# if username matches, only project names that match the filter will be included and displayed in the
# project library when opening a project in GNS3 client

#filter1="user1":"(.*)Group1(.*)"
#filter2="user2":"(.*)Group2(.*)"



[deny]
# Defines filter rules to deny certain requests, passing through the proxy.
#
# Format: "<username regexp>":"<http method>":"<url regexp>":"<http header regexp>":"<http body regexp>"
#
# if any of the rules matches, request will be denied
# see GNS3 API documentation for examples for GNS3 REST requests https://gns3-server.readthedocs.io/en/latest/

# Example to allow users only read-only access, including starting/stopping etc. but not edit, create, delete in
# projects:

#rule1="user(.*)":"POST":"(.*)/projects$":"":""
#rule2="user(.*)":"POST":"(.*)/nodes$":"":""
#rule3="user(.*)":"POST":"(.*)/links$":"":""
#rule4="user(.*)":"POST":"(.*)/drawings$":"":""
#rule5="user(.*)":"POST":"(.*)/appliances/(.*)":"":""
#rule6="user(.*)":"POST":"(.*)/compute":"":""
#rule7="user(.*)":"POST":"(.*)/compute/(.*)":"":""
#rule8="user(.*)":"DELETE":"":"":""
